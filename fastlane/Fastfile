fastlane_require 'aws-sdk-kms'
default_platform(:ios)

platform :ios do

  before_all do
    setup_circle_ci
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do |options|
    unless options[:build_number]
      UI.error "No build_number provided!"
      exit(1)
    end

    update_build_number build_number:options[:build_number]
    push_to_git_remote unless options[:skip_push]

    install_signing
    build_app(
      project: "./ios/EuTambem.xcodeproj",
      scheme: "EuTambem")
    upload_to_testflight
  end

  desc "Install all certificates and provisioning profiles"
  lane :install_signing do
    sync_code_signing(type: "development", readonly: true)
    sync_code_signing(type: "appstore", readonly: true)
  end

  desc "Generate AppIcons for ios"
  lane :generate_app_icons do
    appicon(
      appicon_image_file: './app/img/AppIcon.png',
      appicon_path: './ios/EuTambem/Images.xcassets',
      appicon_devices: [:ipad, :iphone, :ios_marketing]
    )
  end

  desc "Update and tag the version/build"
  lane :update_build_number do |options|

    increment_build_number(
      xcodeproj: "./ios/EuTambem.xcodeproj", 
      build_number: options[:build_number]
    )

    build_number = get_build_number(xcodeproj: "./ios/EuTambem.xcodeproj")
    version_number = get_version_number(xcodeproj: "./ios/EuTambem.xcodeproj")
    tag_name = "ios/#{version_number}/#{build_number}"
    add_git_tag(tag: tag_name)

    UI.success("Success! New version: #{tag_name}")
  end
  
end

platform :android do

  desc "Prepare dependencies for building app"
  lane :prepare_build do |options|
    decrypt_key(file: '../android/app/eutambem.keystore')
  end

  desc "Build app"
  lane :build do |options|
    build_number = options[:build_number]
    puts "Build number: #{build_number}"
    build_properties = ENV['CIRCLECI'] ? {
      'MYAPP_RELEASE_STORE_PASSWORD' => ENV['MYAPP_RELEASE_STORE_PASSWORD'],
      'MYAPP_RELEASE_KEY_PASSWORD' => ENV['MYAPP_RELEASE_KEY_PASSWORD'],
    } : {}
    build_properties[:VERSION_CODE] = build_number

    gradle(
      task: 'assemble',
      build_type: 'Release',
      properties: build_properties,
      print_command: false,
      project_dir: '../android',
    )

    tag_name = "android/#{build_number}"
    add_git_tag(tag: tag_name)
    push_to_git_remote unless options[:skip_push]
  end

  desc "Submit a new Beta Build to Google Play"
  lane :beta do |options|
    unless options[:build_number]
      UI.error "No build_number provided!"
      exit(1)
    end

    prepare_build

    build(
      build_number: options[:build_number],
    )
    upload_to_play_store(
      track: 'internal',
    )
  end

  desc "Deploy a new version to Google Play"
  lane :deploy do
    build
    upload_to_play_store
  end

  desc "Encrypt sensitive key"
  lane :encrypt_key do |options|
    file = options[:file]
    kms = Aws::KMS::Client.new()
    decrypted_file = IO.read(file)
    encrypted_data = kms.encrypt(key_id: 'alias/eutambem', plaintext: decrypted_file)
    encrypted_text = Base64.encode64(encrypted_data.ciphertext_blob)
    IO.write(file + '.encrypted', encrypted_text)

    UI.success("Successfully encrypted key #{file}")
  end

  desc "Decrypt sensitive key"
  lane :decrypt_key do |options|
    file = options[:file]
    kms = Aws::KMS::Client.new()
    encrypted_file = IO.read(file + '.encrypted')
    encrypted_data = Base64.decode64(encrypted_file)
    decrypted_data = kms.decrypt(ciphertext_blob: encrypted_data)
    IO.write(file, decrypted_data.plaintext)

    UI.success("Successfully decrypted key #{file}")
  end
  
end
